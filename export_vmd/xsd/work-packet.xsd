<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<!-- <TreeWorkPacket> -->
	<xs:element name="TreeWorkPacket">
		<xs:complexType>
			<xs:all>
				<!-- <sAcctType> varchar(1)*			[W], R, Y, Z (see list below) -->
				<xs:element name="sAcctType">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sRoleType> varchar(2)*			[PI], TT -->
				<xs:element name="sRoleType">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="2"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sDT> varchar(1)*			D, [T] -->
				<xs:element name="sDT">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sDivCode> varchar(2)*			User selected value (listed in appendix) -->
				<xs:element name="sDivCode">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="2"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <iProjID> int				[NULL] or user supplied value -->
				<xs:element name="iProjID">
					<xs:simpleType>
						<xs:restriction base="xs:integer">
							<xs:maxInclusive value="2147483647"/>
							<xs:minInclusive value="-2147483648"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <bQC> bit*				[0], 1 -->
				<xs:element name="bQC">
					<xs:simpleType>
						<xs:restriction base="xs:integer">
							<xs:pattern value="[0-1]"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <bReadOnly> bit*			[0], 1 -->
				<xs:element name="bReadOnly">
					<xs:simpleType>
						<xs:restriction base="xs:integer">
							<xs:pattern value="[0-1]"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sInspComp> varchar(3)			[NULL] or user supplied value from list below -->
				<xs:element name="sInspComp">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="3"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sAssignedUser> varchar(50)		[NULL] or user supplied value -->
				<xs:element name="sAssignedUser">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="50"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sWorkPacketStatus> char(3)		[NEW], INP, CMP -->
				<xs:element name="sWorkPacketStatus">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="3"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sTransmitStatus> char(2)		[CI], CO -->
				<xs:element name="sTransmitStatus">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="2"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sComments> varchar(1024)		[NULL]  or user supplied value - **Recommend using import batch ID from external system -->
				<xs:element name="sComments">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="1024"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <bObsolete> bit*			[0], 1 -->
				<xs:element name="bObsolete">
					<xs:simpleType>
						<xs:restriction base="xs:integer">
							<xs:pattern value="[0-1]"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <bAdHoc> bit				0, [1] -->
				<xs:element name="bAdHoc">
					<xs:simpleType>
						<xs:restriction base="xs:integer">
							<xs:pattern value="[0-1]"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <sGenType> char(2)			[T0],TS,TR,C0,CS,CR -->
				<xs:element name="sGenType">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:length value="2"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <iPacketParent>	int			[NULL] -->
				<xs:element name="iPacketParent">
					<xs:simpleType>
						<xs:restriction base="xs:integer">
							<xs:maxInclusive value="2147483647"/>
							<xs:minInclusive value="-2147483648"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<!-- <TreeLoc> -->
				<xs:element name="TreeLoc">
					<xs:complexType>
						<xs:all>
							<!-- <iSSDRoute> int				*Default to 10 -->
							<xs:element name="iSSDRoute">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iRouteNum> int				*Increment locations by 10 starting at 10 -->
							<xs:element name="iRouteNum">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sDivCode> char(2)			*Valid DIV code below -->
							<xs:element name="sDivCode">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCountyCode> char(2)			*Valid County Code below -->
							<xs:element name="sCountyCode">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sInspComp> char(3) 			*[PGE] or select from list below -->
							<xs:element name="sInspComp">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="3"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sInsp> char(4)				[SYSA] or userid of inspector -->
							<xs:element name="sInsp">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="4"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sArea> char(10)			[NULL] -->
							<xs:element name="sArea">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="10"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCircuit> char(10)			*Circuit from list below -->
							<xs:element name="sCircuit">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="10"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sQuadMap> char(11)			[NULL] -->
							<xs:element name="sQuadMap">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="11"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sMapType> char(1)			[NULL] -->
							<xs:element name="sMapType">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sMapTypeNum> char(8)			[NULL] -->
							<xs:element name="sMapTypeNum">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="8"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sTagType> char(1)			*[D] or select from list below -->
							<xs:element name="sTagType">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sTagNum> char(10)			[NULL] -->
							<xs:element name="sTagNum">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="10"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sStreetNum> char(11)			*Use APN street number or [0] -->
							<xs:element name="sStreetNum">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="11"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sStreet> char(26)			*Use APN street name or [NO ROAD] -->
							<xs:element name="sStreet">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="26"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sDirections> varchar(70)				[NULL] -->
							<xs:element name="sDirections">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="70"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sRACode1> char(2)				[NULL] or select from list below -->
							<xs:element name="sRACode1">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sRACode2> char(2)			[NULL] or select from list below -->
							<xs:element name="sRACode2">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCity> char(11)			*First 11 char of city, or nearest city if in unicorporated county territory -->
							<xs:element name="sCity">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="11"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sSourceDev> char(8)			*Use Tower ID xxx/xxx -->
							<xs:element name="sSourceDev">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="8"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sPriVolt> char(3)			Highest Line voltage on span or [NULL] if unknown -->
							<xs:element name="sPriVolt">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="3"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sSConst> char(1)			[NULL] -->
							<xs:element name="sSConst">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bSRA> bit				*SRA = 1 if state/federal fire responsibility area, else 0 for LRA -->
							<xs:element name="bSRA">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sComments> char(255)			[NULL] -->
							<xs:element name="sComments">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="255"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bCommAlert> bit			*[0] -->
							<xs:element name="bCommAlert">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sPCC> char(6)				[NULL] -->
							<xs:element name="sPCC">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="6"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sMisc> char(5)				[NULL] -->
							<xs:element name="sMisc">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="5"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCustName> char(15)			Customer Name from APN or [NULL] -->
							<xs:element name="sCustName">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="15"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCustPhone> char(12)			Customer Phone from APN or [NULL] -->
							<xs:element name="sCustPhone">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="12"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bCustAtLoc> bit			*[0] -->
							<xs:element name="bCustAtLoc">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sLocalID> char(2)			[NULL] -->
							<xs:element name="sLocalID">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sPoleNum> char(9)			Tower Number or [NULL] -->
							<xs:element name="sPoleNum">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="9"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sLineID> char(6)			Highest voltage Transmission Line on span -->
							<xs:element name="sLineID">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="6"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <dtInspDate> datetime			Inspection Date (flyover date) -->
							<xs:element name="dtInspDate" type="xs:date"/>
							<!-- <sRemNum> char(8)			[NULL] -->
							<xs:element name="sRemNum">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="8"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sAcctType> char(1)			[W], R, Y, Z or from list below -->
							<xs:element name="sAcctType">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCustName2> char(15)			[NULL] or user entered -->
							<xs:element name="sCustName2">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="15"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sCustPhone2> char(12)			[NULL] or user entered -->
							<xs:element name="sCustPhone2">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="12"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sRACode3> char(2)			[NULL] or select from list below -->
							<xs:element name="sRACode3">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sRACode4> char(2)			[NULL] or select from list below -->
							<xs:element name="sRACode4">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sRACode5> char(2)			[NULL] or select from list below -->
							<xs:element name="sRACode5">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sRACode6> char(2)			[NULL] or select from list below -->
							<xs:element name="sRACode6">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="2"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bUnderBuild> bit			[0],1 - Not sure if it's possible to visually determine if there is distrubution under the trans line -->
							<xs:element name="bUnderBuild">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iPIRoute> int				Incrementing number in order of inspection (1,2,3,... etc) -->
							<xs:element name="iPIRoute">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sXStreet> char(255)			[NULL] or Nearest cross street or NULL if none within 1 mile -->
							<xs:element name="sXStreet">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="255"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sAPN> char(50)				[NULL] or APN number -->
							<xs:element name="sAPN">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="50"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sPoleNum2> char(9)			[NULL] or Next Tower Number in span (xxx/xxx) -->
							<xs:element name="sPoleNum2">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="9"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iEasement> int				[NULL] -->
							<xs:element name="iEasement">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iSpanLength> int			[NULL] or Distance in ft. between tower 1 and tower 2 -->
							<xs:element name="iSpanLength">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iBioUnitsTrim> int			[NULL] -->
							<xs:element name="iBioUnitsTrim">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iBioUnitsRemoval> int			[NULL] -->
							<xs:element name="iBioUnitsRemoval">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bVELBArea> bit				Location within Valley Elderberry protection zone = 1, else 0 -->
							<xs:element name="bVELBArea">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sTWADocNum> char(15)			[NULL] -->
							<xs:element name="sTWADocNum">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="15"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sTWAAgreement> char(4000)		[NULL] -->
							<xs:element name="sTWAAgreement">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="4000"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sTWASignedBy> char(50)			[NULL] -->
							<xs:element name="sTWASignedBy">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="50"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <gTWASignature> BLOB			[NULL] -->
							<xs:element name="blobsrc" type="xs:hexBinary"/>
							<!-- <dtTWASignedDate> datetime		[NULL] -->
							<xs:element name="dtTWASignedDate" type="xs:date"/>
							<!-- <iCityID> int				From city list below -->
							<xs:element name="iCityID">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sTreeLocStatus> char(10)		[CMP_WK_NR], or value from list below -->
							<xs:element name="sTreeLocStatus">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="10"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bHCPArea> bit				[NULL] -->
							<xs:element name="bHCPArea">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sHCPAreaName> char(50)			[NULL] -->
							<xs:element name="sHCPAreaName">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="50"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bE10cActivity> bit			[NULL] -->
							<xs:element name="bE10cActivity">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <iE10cAcreage> int			[NULL] -->
							<xs:element name="iE10cAcreage">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:maxInclusive value="2147483647"/>
										<xs:minInclusive value="-2147483648"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <bMBZ> bit				[NULL] -->
							<xs:element name="bMBZ">
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:pattern value="[0-1]"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sMBZID> char(8)			[NULL] -->
							<xs:element name="sMBZID">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="8"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <sJointPoleUtility> char(60)		[NULL] -->
							<xs:element name="sJointPoleUtility">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="60"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <dtPrevInspDate> datetime		[NULL] -->
							<xs:element name="dtPrevInspDate" type="xs:date"/>
							<!-- <ExternalLocID> varchar(50)		Unique identifier of location from external source system -->
							<xs:element name="ExternalLocID">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:length value="50"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<!-- <TreeLoc_GPS> -->
							<xs:element name="TreeLoc_GPS">
								<xs:complexType>
									<xs:all>
										<!-- <nLatitude> numeric(12, 9)		format:   39.736025000 -->
										<xs:element name="nLatitude">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="9"/>
													<xs:totalDigits value="12"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nLongitude> numeric(12, 9)		format: -121.859128000 -->
										<xs:element name="nLongitude">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="9"/>
													<xs:totalDigits value="12"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtMobileCapture> datetime		Date/Time of flyover -->
										<xs:element name="dtMobileCapture" type="xs:date"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<!-- <TreeLocAlerts> -->
							<xs:element name="TreeLocAlerts">
								<xs:complexType>
									<xs:all>
										<!-- <iTreeLocID> int			*LocationID -->
										<xs:element name="iTreeLocID">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:maxInclusive value="2147483647"/>
													<xs:minInclusive value="-2147483648"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sRACode> char(2)			*Alert code from list below -->
										<xs:element name="sRACode">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sUserID> varchar(50)			*[UserID] -->
										<xs:element name="sUserID">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtDateAdded> datetime			*[Inspection Date] -->
										<xs:element name="dtDateAdded" type="xs:date"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<!-- <TreeLocRestrictions> -->
							<xs:element name="TreeLocRestrictions">
								<xs:complexType>
									<xs:all>
										<!-- <iTreeLocID> int 			*LocationID -->
										<xs:element name="iTreeLocID">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:maxInclusive value="2147483647"/>
													<xs:minInclusive value="-2147483648"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sRestrictionCode> char(2)		*Restriction code -->
										<xs:element name="sRestrictionCode">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bTreeRecsRestriction> bit		IF related sLT value is L, then 0, else 1  (see Restrictions Table below) -->
										<xs:element name="bTreeRecsRestriction">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sUserID> varchar(50) 		*[UserID] -->
										<xs:element name="sUserID">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtDateAdded> datetime 		*[Inspection Date] -->
										<xs:element name="dtDateAdded" type="xs:date"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<!-- <TreeLocContacts> -->
							<xs:element name="TreeLocContacts">
								<xs:complexType>
									<xs:all>
										<!-- <sContactType> char(2)			*[R] Code indicating contact type (see list below) -->
										<xs:element name="sContactType">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bPrimary> bit				*[1] Flag indicating if this is the primary contact for the location -->
										<xs:element name="bPrimary">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sComments> varchar(255) -->
										<xs:element name="sComments">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="255"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sLastName> varchar(50)			*Last name of customer -->
										<xs:element name="sLastName">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sFirstName> varchar(50) -->
										<xs:element name="sFirstName">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sBusinessName> varchar(50) -->
										<xs:element name="sBusinessName">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sStreetNum> varchar(11)		Mailing address info -->
										<xs:element name="sStreetNum">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="11"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sStreet> varchar(50) -->
										<xs:element name="sStreet">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sCity> varchar(30) -->
										<xs:element name="sCity">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="30"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sState> char(2) -->
										<xs:element name="sState">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sZipcode> varchar(50) -->
										<xs:element name="sZipcode">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sPhone> varchar(14) -->
										<xs:element name="sPhone">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="14"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sAltPhone> varchar(14) -->
										<xs:element name="sAltPhone">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="14"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sFax> varchar(14) -->
										<xs:element name="sFax">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="14"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sEmail> varchar(255) -->
										<xs:element name="sEmail">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="255"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<!-- <TreeLocFile>					Note that <TreeLocFile> section can be repeated for multiple files -->
							<xs:element name="TreeLocFile">
								<xs:complexType>
									<xs:all>
										<!-- <iTreeLocID> int			*File will be associated with this location -->
										<xs:element name="iTreeLocID">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:maxInclusive value="2147483647"/>
													<xs:minInclusive value="-2147483648"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sFileName> varchar(100)		*Should conform to windows file naming standards - no special chars such as ? , etc... -->
										<xs:element name="sFileName">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="100"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sFile> BLOB data stream		*No data limit -->
										<xs:element name="blobsrc" type="xs:hexBinary"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<!-- <TreeRecs> -->
							<xs:element name="TreeRecs">
								<xs:complexType>
									<xs:all>
										<!-- <sTreeCode> char(4)			[NULL] or user selected from list below -->
										<xs:element name="sTreeCode">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="4"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sNotification> char(1)			*[N],O,C,H,R,Q -->
										<xs:element name="sNotification">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nDBH> numeric(2, 0)			[NULL] or prescribed by CUF -->
										<xs:element name="nDBH">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="0"/>
													<xs:totalDigits value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nHeight> numeric(3, 0)			Height in feet, rounded to integer value -->
										<xs:element name="nHeight">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="0"/>
													<xs:totalDigits value="3"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nClearance> numeric(2, 0)		[NULL] or prescribed by CUF -->
										<xs:element name="nClearance">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="0"/>
													<xs:totalDigits value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nQty> numeric(5, 2)			[1] if listing single units of trees, or total quantity of trees of similar species/dbh/height -->
										<xs:element name="nQty">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="2"/>
													<xs:totalDigits value="5"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sTrimCode> char(3)			[NULL] or user selected from list below -->
										<xs:element name="sTrimCode">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="3"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nManHours> numeric(5, 2)		[NULL] -->
										<xs:element name="nManHours">
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:fractionDigits value="2"/>
													<xs:totalDigits value="5"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sPCode> char(1)			[R]Routine, N(No Trim),H(HN-Imd),U(HN-Urg),X(Accelerate),I(Immediate) - Can we setup proximity rules to select priority -->
										<xs:element name="sPCode">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sNextTrim> char(1)			[1],2,3 - Number of years until next inspection -->
										<xs:element name="sNextTrim">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sCrewType> char(2)			[NULL] -->
										<xs:element name="sCrewType">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sWorkType> char(1)			[NULL] -->
										<xs:element name="sWorkType">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sPoleOwner> char(1)			[P] -->
										<xs:element name="sPoleOwner">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sComment> char(45)			[NULL] or user entered -->
										<xs:element name="sComment">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="45"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sOwnedBy> char(2)			[NULL] or landowner value entered by user from list below -->
										<xs:element name="sOwnedBy">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bUnderBuild> bit			*[0] Not sure if we can determine if there is underbuild -->
										<xs:element name="bUnderBuild">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bTreeConn> bit				*[0] -->
										<xs:element name="bTreeConn">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bTreeWire> bit				*[0] -->
										<xs:element name="bTreeWire">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bInsfClear> bit			*[0] -->
										<xs:element name="bInsfClear">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sReason> char(2)			[NULL] -->
										<xs:element name="sReason">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="2"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sAcctType> char(1)			[W], R, Y, Z or from list below -->
										<xs:element name="sAcctType">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bNotifyPhon> bit			*[0] or user entered -->
										<xs:element name="bNotifyPhon">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bNotifyPers> bit			*[0] or user entered -->
										<xs:element name="bNotifyPers">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bNotifyDoor> bit			*[1] or user entered -->
										<xs:element name="bNotifyDoor">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bNotifyPerm> bit			*[0] or user entered -->
										<xs:element name="bNotifyPerm">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <iTreeSort> tinyint			*Tree number, Integer increasing from 1,2,3,...,255 -->
										<xs:element name="iTreeSort">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:minInclusive value="0"/>
													<xs:maxInclusive value="255"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sWorkReq> char(11)			[NULL] -->
										<xs:element name="sWorkReq">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="11"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <iWRTreeRecsID> int			[NULL] -->
										<xs:element name="iWRTreeRecsID">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:maxInclusive value="2147483647"/>
													<xs:minInclusive value="-2147483648"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtNextTrimDate> datetime		[Default to one year from inspection date] -->
										<xs:element name="dtNextTrimDate" type="xs:date"/>
										<!-- <sWrkRptNum> char(7)			[NULL] -->
										<xs:element name="sWrkRptNum">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="7"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sPerformCont> char(7)			[NULL] -->
										<xs:element name="sPerformCont">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="7"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtInspDate> datetime			*Date of inspection/flyover -->
										<xs:element name="dtInspDate" type="xs:date"/>
										<!-- <sInspComp> char(3)			*[PGE] or value from inspection company list below -->
										<xs:element name="sInspComp">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="3"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sInsp> char(4)				[inspector id] or [sysa] if unknown inspector -->
										<xs:element name="sInsp">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="4"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dTGR> datetime				[NULL] -->
										<xs:element name="dTGR" type="xs:date"/>
										<!-- <sMWSDocNum> char(6)			[NULL] -->
										<xs:element name="sMWSDocNum">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="6"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sMWS>	char(1)				[N] - Not a MWS -->
										<xs:element name="sMWS">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <nProximity> tinyint			[NULL] or lateral distance in ft. to line -->
										<xs:element name="nProximity">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:minInclusive value="0"/>
													<xs:maxInclusive value="255"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtTGRPriorLast> datetime		[NULL] -->
										<xs:element name="dtTGRPriorLast" type="xs:date"/>
										<!-- <dtTrimPriorLast> datetime		[NULL] -->
										<xs:element name="dtTrimPriorLast" type="xs:date"/>
										<!-- <nWireType> tinyint			[NULL] -->
										<xs:element name="nWireType">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:minInclusive value="0"/>
													<xs:maxInclusive value="255"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtVisitedDate> datetime		Inspection Date -->
										<xs:element name="dtVisitedDate" type="xs:date"/>
										<!-- <sLineID2> char(6)			Secondary Line -->
										<xs:element name="sLineID2">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="6"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sMWSUserID> char(50)			[NULL] -->
										<xs:element name="sMWSUserID">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <dtMWSSignedDate> datetime		[NULL] -->
										<xs:element name="dtMWSSignedDate" type="xs:date"/>
										<!-- <sRxComments> char(255)			[NULL] or user entered value -->
										<xs:element name="sRxComments">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="255"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bVELBArea> bit				[0] -->
										<xs:element name="bVELBArea">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bMWS> bit				[0] -->
										<xs:element name="bMWS">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sTreeRecsStatus> char(10)		[OPEN] or value from list below -->
										<xs:element name="sTreeRecsStatus">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="10"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <bJointPole> bit			[0] -->
										<xs:element name="bJointPole">
											<xs:simpleType>
												<xs:restriction base="xs:integer">
													<xs:pattern value="[0-1]"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <sJointPoleUtility> char(60)		[NULL] -->
										<xs:element name="sJointPoleUtility">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="60"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <ExternalTreeID> varchar(50)		Unique identifier of tree from external source system -->
										<xs:element name="ExternalTreeID">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:length value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<!-- <TreeRecs_GPS> -->
										<xs:element name="TreeRecs_GPS">
											<xs:complexType>
												<xs:all>
													<!-- <nLatitude> numeric(12, 9)		format:   39.736025000 -->
													<xs:element name="nLatitude">
														<xs:simpleType>
															<xs:restriction base="xs:decimal">
																<xs:fractionDigits value="9"/>
																<xs:totalDigits value="12"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <nLongitude> numeric(12, 9)		format: -121.859128000 -->
													<xs:element name="nLongitude">
														<xs:simpleType>
															<xs:restriction base="xs:decimal">
																<xs:fractionDigits value="9"/>
																<xs:totalDigits value="12"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <dtMobileCapture> datetime		Date/Time of flyover -->
													<xs:element name="dtMobileCapture" type="xs:date"/>
												</xs:all>
											</xs:complexType>
										</xs:element>
										<!-- <TreeRecsAlerts> -->
										<xs:element name="TreeRecsAlerts">
											<xs:complexType>
												<xs:all>
													<!-- <iTreeLocID> int			*LocationID -->
													<xs:element name="iTreeLocID">
														<xs:simpleType>
															<xs:restriction base="xs:integer">
																<xs:maxInclusive value="2147483647"/>
																<xs:minInclusive value="-2147483648"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <sRACode> char(2)			*Alert code from list below -->
													<xs:element name="sRACode">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:length value="2"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <sUserID> varchar(50)			*[UserID] -->
													<xs:element name="sUserID">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:length value="50"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <dtDateAdded> datetime			*[Inspection Date] -->
													<xs:element name="dtDateAdded" type="xs:date"/>
												</xs:all>
											</xs:complexType>
										</xs:element>
										<!-- <TreeRecsRestrictions> -->
										<xs:element name="TreeRecsRestrictions">
											<xs:complexType>
												<xs:all>
													<!-- <iTreeLocID> int 			*LocationID -->
													<xs:element name="iTreeLocID">
														<xs:simpleType>
															<xs:restriction base="xs:integer">
																<xs:maxInclusive value="2147483647"/>
																<xs:minInclusive value="-2147483648"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <sRestrictionCode> char(2)		*Restriction code -->
													<xs:element name="sRestrictionCode">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:length value="2"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <bTreeRecsRestriction> bit		IF related sLT value is L, then 0, else 1  (see Restrictions Table below) -->
													<xs:element name="bTreeRecsRestriction">
														<xs:simpleType>
															<xs:restriction base="xs:integer">
																<xs:pattern value="[0-1]"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <sUserID> varchar(50) 			*[UserID] -->
													<xs:element name="sUserID">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:length value="50"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <dtDateAdded> datetime 			*[Inspection Date] -->
													<xs:element name="dtDateAdded" type="xs:date"/>
												</xs:all>
											</xs:complexType>
										</xs:element>
										<!-- <TreeRecsFile>					Note that <TreeRecsFile> section can be repeated for multiple files -->
										<xs:element name="TreeRecsFile">
											<xs:complexType>
												<xs:all>
													<!-- <iTreeRecsID> int			*File will be associated with this tree -->
													<xs:element name="iTreeRecsID">
														<xs:simpleType>
															<xs:restriction base="xs:integer">
																<xs:maxInclusive value="2147483647"/>
																<xs:minInclusive value="-2147483648"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <sFileName> varchar(100)		*Should conform to windows file naming standards - no special chars such as ? , etc... -->
													<xs:element name="sFileName">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:length value="100"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<!-- <sFile> BLOB data stream		*No data limit -->
													<xs:element name="blobsrc" type="xs:hexBinary"/>
												</xs:all>
											</xs:complexType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:all>
		</xs:complexType>
	</xs:element>
</xs:schema>
